services:
  zookeeper:
    networks:
      - datastream_monitory-network
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - datastream_monitory-network
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://43.200.39.139:9092 
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - "9092:9092"

  influxdb:
    networks:
      - datastream_monitory-network
    image: influxdb:1.11
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
      - ./init-influxdb.sh:/docker-entrypoint-initdb.d/init-influxdb.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 10s
      retries: 5

  # chronograf:
  #   networks:
  #     - datastream_monitory-network
  #   image: chronograf:1.9
  #   ports:
  #     - "8888:8888"
  #   environment:
  #     - INFLUXDB_URL=http://influxdb:8086
  #   depends_on:
  #     - influxdb

  connect:
    image: confluentinc/cp-kafka-connect:latest
    networks:
      - datastream_monitory-network
    depends_on:
      kafka:
        condition: service_started
      influxdb:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9093'
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/usr/share/confluent-hub-components/s3-connector-lib,/usr/share/confluent-hub-components/influxdb-connector-lib"

    volumes:
      # 로컬의 S3 커넥터 lib 폴더를 컨테이너 내부의 지정된 경로로 마운트
      - ./confluentinc-kafka-connect-s3-10.6.5/lib:/usr/share/confluent-hub-components/s3-connector-lib
      # 로컬의 InfluxDB 커넥터 lib 폴더를 컨테이너 내부의 지정된 경로로 마운트
      - ./confluentinc-kafka-connect-influxdb-1.2.11/lib:/usr/share/confluent-hub-components/influxdb-connector-lib
      # (선택적) AWS 자격 증명 파일 마운트
      # - ~/.aws:/root/.aws:ro
      - ~/.aws:/home/appuser/.aws:ro


volumes:
  influxdb_data:

networks:
  datastream_monitory-network:
    driver: bridge
